# WORK Template v5.1 - AI-Native (Shared Pool)
# Reusable execution unit referenced by multiple PATHs

WORK:
  id: work-name  # lowercase-hyphenated
  what: "Clear goal statement"
  phase_context: "How this WORK relates to overall PHASE objectives"
  
  # CONTEXT SECTION - For AI agents to understand environment
  context:
    location: "Where this work happens"
    prerequisites: "What must exist before starting"
    outputs: "What this creates for next WORKs"
    dependencies: ["other-work-1", "other-work-2"]
    phase_dependencies: "Dependencies on other PATHs in the same PHASE"
    shared_resources: "PHASE-level resources this WORK uses"
    
  # KNOWLEDGE SECTION - Critical information for this task
  knowledge:
    - "Important fact or constraint"
    - "Technical requirement or limitation"
    - "Domain-specific knowledge needed"
  
  # EXECUTION SECTION - The actual work
  how:
    - "High-level step 1"
    - "High-level step 2"
    - "High-level step 3"
  
  metrics:
    - "Measurable success criterion 1"
    - "Measurable success criterion 2"
  
  # ARTIFACTS SECTION - Implementation details
  artifacts:
    config: |
      # Actual configuration
    code: |
      # Actual implementation
    schema: |
      # Database schemas, API specs, etc.
    test: |
      # Test cases or validation
  
  # LEARNINGS SECTION - Accumulated from executions
  learnings:
    - source: "TIDE_1"
      learning: "What failed and why"
      scope: "PATH/PHASE"  # Whether learning applies to PATH or whole PHASE
    - source: "TIDE_2" 
      learning: "What worked after adaptation"
      scope: "PATH/PHASE"
    - source: "Production"
      learning: "Real-world insight"
      scope: "PHASE"  # This learning applies to entire PHASE
    - source: "Cross-PATH"
      learning: "Integration insight from working with other PATHs"
      scope: "PHASE"
  
  # TROUBLESHOOTING SECTION - Known issues and solutions
  troubleshooting:
    - issue: "Common problem description"
      symptoms: "How it manifests"
      solution: "How to fix it"
      prevention: "How to avoid it"
  
  # EVOLUTION SECTION - How this WORK has changed
  evolution:
    v1_to_v2: "Added error handling"
    v2_to_v3: "Improved performance"
    current_version: "v3"
    
  # REFERENCES - External resources if needed
  references:
    docs: "Link to detailed documentation"
    examples: "Link to similar implementations"